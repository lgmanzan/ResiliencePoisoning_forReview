idTestCase,code
1,"main ()
{
struct fakeint {
	short f0;
	short zeros;
};
struct fakeint strange;
struct fakeint strange2;
strange.f0=-240;
strange2.f0=240;
strange2.zeros=0;
strange.zeros=0;
printf("%d %d\n",strange.f0,strange);
printf("%d %d\n",strange2.f0,strange2);
}"
3,"#include <stdio.h>
int main() {
int value;
value = (int)(~((int)0) ^ (1 << (sizeof(int)*8)));
printf("Max unsigned int: %u %1$x\nNow signed: %1$d %1$x\n",
value);
return
}"
4,"#include <stdio.h>
#include <string.h>
int main() {
char longString[] = "Cellular bananular phone";
char shortString[16];
strncpy(shortString, longString, 16);
printf("The last character in shortString is: %c %1$x\n",
shortString[15]);
return (0);
}"
5,"#include <stdio.h>
#include <strings.h>
#include <wchar.h>
int main() {
wchar_t wideString[] = L"The spazzy orange tiger jumped ” \
“over the tawny jaguar.";
wchar_t *newString;
newString = (wchar_t *) malloc(strlen(wideString));
printf("Strlen() output: %d\nWcslen() output: %d\n",
strlen(wideString), wcslen(wideString));
}"
6,"#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#define BUFSIZER1 512
#define BUFSIZER2 ((BUFSIZER1/2) - 8)
int main(int argc, char **argv) {
char *buf1R1;
char *buf2R1;
char *buf2R2;
char *buf3R2;
buf1R1 = (char *) malloc(BUFSIZER1);
buf2R1 = (char *) malloc(BUFSIZER1);
free(buf2R1);
buf2R2 = (char *) malloc(BUFSIZER2);
buf3R2 = (char *) malloc(BUFSIZER2);
strncpy(buf2R1, argv[1], BUFSIZER1-1);
free(buf1R1);
free(buf2R2);
free(buf3R2);
}"
7,"void example(char *s) {
char buf[1024];
strcpy(buf, s);
}
int main(int argc, char **argv) {
example(argv[1]);
}"
8,"#include <stdio.h>
#include <unistd.h>
#define BUFSIZE1 512
#define BUFSIZE2 ((BUFSIZE1/2) - 8)
int main(int argc, char **argv) {
char *buf1R1;
char *buf2R1;
char *buf1R2;
buf1R1 = (char *) malloc(BUFSIZE2);
buf2R1 = (char *) malloc(BUFSIZE2);
free(buf1R1);
free(buf2R1);
buf1R2 = (char *) malloc(BUFSIZE1);
strncpy(buf1R2, argv[1], BUFSIZE1-1);
free(buf2R1);
free(buf1R2);
}"
10,"#include <stdio.h>
int main(int argc, char **argv) {
char buf[5012];
memcpy(buf, argv[1], 5012);
printf(argv[1]);  
return (0);
}"
11,"#include <stdio.h>
#include <unistd.h>
int main(int argc, char **argv) {
char cat[] = "cat ";
char *command;
size_t commandLength;
commandLength = strlen(cat) + strlen(argv[1]) + 1;
command = (char *) malloc(commandLength);
strncpy(command, cat, commandLength);
strncat(command, argv[1], (commandLength - strlen(cat)) );
system(command);
return (0);
}"
13,"#define BUFSIZE 256
int main(int argc, char **argv) {
char *buf1 = (char *) malloc(BUFSIZE);
char *buf2 = (char *) malloc(BUFSIZE);
strcpy(buf1, argv[1]);
free(buf2);
}"
14,"#define BUFSIZE 256
int main(int argc, char **argv) {
char buf[BUFSIZE];
strcpy(buf, argv[1]);
}"
15,"#define BUFSIZE 256
int main(int argc, char **argv) {
char *buf;
buf = (char *)malloc(BUFSIZE);
strcpy(buf, argv[1]);
}"
16,"#include <iostream>
#include <string>
using namespace std;
int main() {
char destBuf[1024],srcBuf[1024];
string s1 = "This string is fair short.";
srcBuf[0]='\0';
strncpy(destBuf, &srcBuf[s1.find("abc")], 100); 
}"
19,"#include <stdio.h>
int main() {
int value;
value = (int)(~((int)0) ^ (1 << (sizeof(int)*8)));
printf("Max unsigned int: %u %1$x\nNow signed: %1$d %1$x\n",
value);
return (0);
}"
20,"#include <stdio.h>
int main() {
int intPrimitive;
short shortPrimitive;
intPrimitive = (int)(~((int)0) ^ (1 << (sizeof(int)*8-1)));
shortPrimitive = intPrimitive;
printf("Int MAXINT: %d\nShort MAXINT: %d\n",
intPrimitive, shortPrimitive);
return (0);
}"
22,"main()
}
char a;
char b;
*(&a + 1) = 0;
}"
35,"static void print(char * string) {
char * word;
int counter;
fflush(stdout);
for(word = string; counter = *word++; ) putc(counter, stdout);
}
int main(void) {
pid_t pid;
if( (pid = fork()) < 0) exit(-2);
else if( pid == 0) print("child");
else print("parent\n");
exit(0);
}"
38,"#include <sys/types.h>
#include <sys/stat.h>
int main(argc,argv){
struct stat *sb;
time_t timer;
lstat("bar.sh",sb);
printf("%d\n",sb->st_ctime);
switch(sb->st_ctime % 2){
case 0: printf("One option\n");break;
case 1: printf("another option\n");break;
default: printf("huh\n");break;
}
return 0;
}"
39,"#include <signal.h>
#include <syslog.h>
#include <string.h>
#include <stdlib.h>
void *global1, *global2;
char *what;
void sh(int dummy) {
syslog(LOG_NOTICE,"%s\n",what);
free(global2);
free(global1);
sleep(10);
exit(0);
}
int main(int argc,char* argv[]) {
what=argv[1];
global1=strdup(argv[2]);
global2=malloc(340);
signal(SIGHUP,sh);
signal(SIGTERM,sh);
sleep(10);
exit(0);
}"
40,"#include <stdio.h>
#include <string.h>
int main()
{
	char password[256];
	gets(password);
	if (strcmp(password,”68af404b513073584c4b6f22b6c63e6b”)) 
		{
		printf(“Incorrect Password!\n”);
		return 0;
		}
	printf(“Entering Diagnostic Mode…\n”);
	return 1;
}"
54,"#include <openssl/sha.h>
#include <stdio.h>
#include <string.h>
#include <memory.h>
int main(){
char *paragraph = NULL;
char *data = NULL;
char *nonce = “bad“;
char *password = “secret”;
parsize=strlen(nonce)+strlen(password);
paragraph=(char*)malloc(para_size);
strncpy(paragraph,nonce,strlen(nonce));
strcpy(paragraph,password,strlen(password));
data=(unsigned char*)malloc(20);
SHA1((const unsigned char*)paragraph,parsize,(unsigned
char*)data);
free(paragraph);
free(data);
return 0;
}"
57,"#include <openssl/evp.h>
main()
{
EVP_CIPHER_CTX ctx;
char key[EVP_MAX_KEY_LENGTH];
char iv[EVP_MAX_IV_LENGTH];
RAND_bytes(key, b);
memset(iv,0,EVP_MAX_IV_LENGTH);
EVP_EncryptInit(&ctx,EVP_bf_cbc(), key,iv);
return;
}"
58,"public class SymmetricCipherTest {
public static void main() {
byte[] text =”Secret".getBytes();
byte[] iv ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
KeyGenerator kg = KeyGenerator.getInstance("DES");
kg.init(56);
SecretKey key = kg.generateKey();
Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
IvParameterSpec ips = new IvParameterSpec(iv);
cipher.init(Cipher.ENCRYPT_MODE, key, ips);
return cipher.doFinal(inpBytes);
}
}"
69,"#include <stdio.h>
#include <string.h>
int main()
{
	char password[256];
	gets(password);
if (strcmp(password, “Mew!”)) {
printf(“Incorrect Password!\n”);
return(0)
}
printf(“Entering Diagnostic Mode…\n”);
return(1);
}"
71,"{
int month = 8;
switch (month) {
case 1: print("January");
case 2: print("February");
case 3: print("March");
case 4: print("April");
case 5: println("May");
case 6: print("June");
case 7: print("July");
case 8: print("August");
case 9: print("September");
case 10: print("October");
case 11: print("November");
case 12: print("December");
}
println(" is a great month");
}"
72,"#include <iostream.h>
#include <new>
#include <stdlib.h>
int
main(){
char input[100];
int i, n;
long *l;
cout << "How many numbers do you want to type in? ";
cin.getline(input, 100);
i = atoi(input);
	l = new long [i];
if (l == NULL)
	exit(1);
for (n = 0; n < i; n++) {
	cout << "Enter number: ";
	cin.getline(input, 100);
	l[n] = atol(input);
}
cout << "You have entered: ";
for (n = 0; n < i; n++)
	cout << l[n] << ", ";
delete[] l;
return 0;
}"
73,"main ()
{
foo=malloc(sizeof(char);
if (foo==0) {
printf("foo==0\n");
}"
74,"main ()
{
malloc(sizeof(int)*4);
}"
75,"int main (void)
{
FILE *stream;
char tempstring[] = "String to be written";
if( (stream = tmpfile()) == NULL ) {
perror("Could not open new temporary file\n");
return (-1);
}
printf( "Temporary file %d was created\n"); 
_rmtmp();
}"
76,"void some_function(int foo, int bar, int xi) {
	int a[3], i;
	va_list ap;
	va_start(ap, foo);
	for (i = 0; i < sizeof(a) / sizeof(int); i++)
		a[i] = va_arg(ap, int);
	va_end(ap);
}
int main(int argc, char *argv[]) {
	some_function(17, 42);
}"
77,"main ()
{
if (malloc(sizeof(int*4) < 0 )
perror(“Failure”); 
}"
78,"main ()
{
int foo;
if (foo==0) printf("foo= 0");
}"
79,"main ()
{
char *foo;
int counter;
foo=malloc(sizeof(char)*10);
for (counter=0;counter!=14;counter++){
foo[counter]='a';
printf("%s\n",foo);
}"
80,"main ()
{
char *foo;
foo=malloc(sizeof(char)*4);
foo[0]='a';
foo[1]='a';
foo[2]=0;
foo[3]='c';
printf("%c %c %c %c %c \n",foo[0],foo[1],foo[2],foo[3]);
printf("%s\n",foo);
}"
81,"#include <stdiob.h>
int main(){
void *foo;
printf("%d\n",sizeof(foo)); 
return 0;
}"
82,"#include <stdiob.h>
int main(){
int *p = x;
char * second_char = (char *)(p + 1);
printf ("%s", second_char);
}"
88,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void test( void )
{
  char buf[MAXSIZE], * p, ch;
  p = buf;
  while ( ( ch = getc( stdin ) ) != EOF && ch != '\n' )
    * p++ = ch;
  * p++ = 0;
  printf( "result: %s\n", buf );
}
int main( int argc, char * * argv )
{
  test();
  return 0;
}"
89,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE], *p;
	p = buf;
	while((*p++ = *str++))				
		continue;
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
91,"#include <fcntl.h>
#include <unistd.h>
#define DIR	"/tmp"
#define FILE	"/etc/passwd"
void test(char *str)
{
	int fd;
	if(chroot(DIR) < 0)
		return;
	fd = open(FILE, O_RDONLY);		
	if(fd >= 0) {
		if(close(fd) < 0)
			;
	}
}
int main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
92,"#include <stdio.h>
void
test(char *str)
{
	printf(str);				
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
93,"#include <syslog.h>
void
test(char *str)
{
	syslog(LOG_CRIT, str);			
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
94,"#include <stdlib.h>
#include <stdio.h>
int main(int argc, char **argv)
{
	char buffer [15] = "Hello World";
        int int1=1, int2=2;
        return 1;
}"
95,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(void)
{
	char buf[MAXSIZE];
	if(gets(buf))					
		printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	test();
	return 0;
}"
96,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(void)
{
	char buf[MAXSIZE];
	if(fgets(buf, 1024, stdin))			
		printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	test();
	return 0;
}"
97,"#include <stdio.h>
#include <stdlib.h>
void
test(unsigned int n)
{
	int *buf, i;
	buf = malloc(n * sizeof *buf);		
	if(!buf)
		return;
	for(i = 0; i < n; i++)
		buf[i] = i;			
	while(i-- > 0)
		printf("%x ", buf[i]);		
	printf("\n");
	free(buf);
}
int
main(int argc, char **argv)
{
	int n;
	if(argc != 2)
		return 1;
	n = strtoul(argv[1], 0, 10);
	test(n);
	return 0;
}"
98,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void
test(char *str)
{
	char *p;
	p = strdup(str);
	if(p)
		printf("result: %s\n", p);
	return;					
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
99,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void
test(char *str)
{
	char *p;
	p = strdup(str);
	if(p) {
		printf("result: %s\n", p);
		free(p);
		free(p);			
	}
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
100,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		32
void
test(char *str)
{
	char buf3[MAXSIZE];
	char buf2[MAXSIZE];
	char buf1[MAXSIZE];
	strncpy(buf1, str, sizeof buf1);
	strncpy(buf2, "This is a Test string", sizeof buf2);
	strcpy(buf3, buf1);			
	printf("result: %s\n", buf3);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
101,"#include <stdio.h>
#include <string.h>
#include <unistd.h>
#define	MAXSIZE		32
void
test(void)
{
	char buf2[MAXSIZE];
	char buf1[MAXSIZE];
	int n;
	n = read(0, buf1, sizeof buf1);
	strcpy(buf2, buf1);				
	printf("result: %s\n", buf2);
}
int
main(int argc, char **argv)
{
	test();
	return 0;
}"
102,"#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#define FILE	"/tmp/myfile"
#define	UID	100
void
test(char *str)
{
	int fd;
	fd = creat(FILE, 0644);
	if(fd == -1)
		return;
	if(chown(FILE, UID, -1) < 0)		
		;
	if(close(fd) < 0)
		;
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
103,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	strcpy(buf, str);				
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
104,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		5
void
test(char *str)
{
	char buf[MAXSIZE];
	if(strlen(str) > MAXSIZE)
		return;
	strcpy(buf, str);				
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
105,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	snprintf(buf, 1024, "<%s>", str);	
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
106,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	snprintf(buf, 1024, "<%s>", str);	
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	test("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
	return 0;
}"
107,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	snprintf(buf, 1024, "<%35s>", str);	
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
108,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str1, char *str2)
{
	char buf[MAXSIZE];
	char *p;
	int l, x;
	p = buf;
	l = sizeof buf;
	snprintf(p, l, "<%s>", str1);
	x = strlen(p);
	p += x;
	l -= x;
	*p++ = ' ';					
	*p++ = '-';					
	l -= 2;						
	snprintf(p, l, "<%s>\n", str2);			
	x = strlen(p);
	p += x;
	l -= x;
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr, *userstr2;
	if(argc > 2) {
		userstr = argv[1];
		userstr2 = argv[2];
		test(userstr, userstr2);
	}
	return 0;
}"
109,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	sprintf(buf, "<%s>", str);		
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
110,"#include <stdio.h>
#include <string.h>
#define	MAXSIZE		5
void
test(char *str)
{
	char buf[MAXSIZE];
	sprintf(buf, "<%.5s>", str);		
	printf("result: %s\n", buf);
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
111,"#include <stdio.h>
#include <stdlib.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	snprintf(buf, sizeof buf, "/bin/echo %s", str);
	system(buf);				
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
112,"#include <stdio.h>
#include <unistd.h>
#define	MAXSIZE		40
void
test(char *str)
{
	char buf[MAXSIZE];
	int x;
	snprintf(buf, sizeof buf, "/usr/games/%s", str);
	x = execl(buf, str, 0);			
	if(x < 0)
		;
}
int
main(int argc, char **argv)
{
	char *userstr;
	if(argc > 1) {
		userstr = argv[1];
		test(userstr);
	}
	return 0;
}"
113,"#include <stdio.h>
#include <unistd.h>
void
test(void)
{
	char *pass;
	pass = getpass("Password: ");
	if(pass) 
		printf("I see <%s>\n", pass);		
}
int
main(int argc, char **argv)
{
	test();
	return 0;
}"
114,"#include <unistd.h>
#include <syslog.h>
void
test(void)
{
	char *pass;
	pass = getpass("Password: ");
	if(pass) 
		syslog(LOG_DEBUG, "user gave us <%s>\n", pass);	
}
int
main(int argc, char **argv)
{
	test();
	return 0;
}"
115,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[4105] = 'A';
  return 0;
}"
116,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[17] = 'A';
  return 0;
}"
117,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[10] = 'A';
  return 0;
}"
118,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[9] = 'A';
  return 0;
}"
119,"int main(int argc, char *argv[])
{
  char read_value;
  char buf[10];
  read_value = buf[4105];
  return 0;
}"
120,"int main(int argc, char *argv[])
{
  char read_value;
  char buf[10];
  read_value = buf[17];
  return 0;
}"
121,"int main(int argc, char *argv[])
{
  char read_value;
  char buf[10];
  read_value = buf[10];
  return 0;
}"
122,"int main(int argc, char *argv[])
{
  char read_value;
  char buf[10];
  read_value = buf[9];
  return 0;
}"
123,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[-4096] = 'A';
  return 0;
}"
124,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[-8] = 'A';
  return 0;
}"
125,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[-1] = 'A';
  return 0;
}"
126,"int main(int argc, char *argv[])
{
  char buf[10];
  buf[0] = 'A';
  return 0;
}"
127,"int main(int argc, char *argv[])
{
  int buf[10];
  buf[4105] = 55;
  return 0;
}"
128,"int main(int argc, char *argv[])
{
  int buf[10];
  buf[17] = 55;
  return 0;
}"
129,"int main(int argc, char *argv[])
{
  int buf[10];
  buf[10] = 55;
  return 0;
}"
130,"int main(int argc, char *argv[])
{
  int buf[10];
  buf[9] = 55;
  return 0;
}"
131,"int main(int argc, char *argv[])
{
  float buf[10];
  buf[4105] = 55.55;
  return 0;
}"
132,"int main(int argc, char *argv[])
{
  float buf[10];
  buf[17] = 55.55;
  return 0;
}"
133,"int main(int argc, char *argv[])
{
  float buf[10];
  buf[10] = 55.55;
  return 0;
}"
134,"int main(int argc, char *argv[])
{
  float buf[10];
  buf[9] = 55.55;
  return 0;
}"
135,"#include <wchar.h>
int main(int argc, char *argv[])
{
  wchar_t buf[10];
  buf[4105] = L'A';
  return 0;
}"
136,"#include <wchar.h>
int main(int argc, char *argv[])
{
  wchar_t buf[10];
  buf[17] = L'A';
  return 0;
}"
137,"#include <wchar.h>
int main(int argc, char *argv[])
{
  wchar_t buf[10];
  buf[10] = L'A';
  return 0;
}"
138,"#include <wchar.h>
int main(int argc, char *argv[])
{
  wchar_t buf[10];
  buf[9] = L'A';
  return 0;
}"
139,"int main(int argc, char *argv[])
{
  char * buf[10];
  buf[4105] = "A";
  return 0;
}"
140,"int main(int argc, char *argv[])
{
  char * buf[10];
  buf[17] = "A";
  return 0;
}"
141,"int main(int argc, char *argv[])
{
  char * buf[10];
  buf[10] = "A";
  return 0;
}"
142,"int main(int argc, char *argv[])
{
  char * buf[10];
  buf[9] = "A";
  return 0;
}"
143,"int main(int argc, char *argv[])
{
  unsigned int buf[10];
  buf[4105] = 55;
  return 0;
}"
144,"int main(int argc, char *argv[])
{
  unsigned int buf[10];
  buf[17] = 55;
  return 0;
}"
145,"int main(int argc, char *argv[])
{
  unsigned int buf[10];
  buf[10] = 55;
  return 0;
}"
146,"int main(int argc, char *argv[])
{
  unsigned int buf[10];
  buf[9] = 55;
  return 0;
}"
147,"int main(int argc, char *argv[])
{
  unsigned char buf[10];
  buf[4105] = 'A';
  return 0;
}"
148,"int main(int argc, char *argv[])
{
  unsigned char buf[10];
  buf[17] = 'A';
  return 0;
}"
149,"int main(int argc, char *argv[])
{
  unsigned char buf[10];
  buf[10] = 'A';
  return 0;
}"
150,"int main(int argc, char *argv[])
{
  unsigned char buf[10];
  buf[9] = 'A';
  return 0;
}"
151,"#include <stdlib.h>
#include <assert.h>
int main(int argc, char *argv[])
{
  char * buf;
  buf = (char *) malloc(10 * sizeof(char));
  assert (buf != NULL);
  buf[4105] = 'A';
  return 0;
}"
152,"#include <stdlib.h>
#include <assert.h>
int main(int argc, char *argv[])
{
  char * buf;
  buf = (char *) malloc(10 * sizeof(char));
  assert (buf != NULL);
  buf[17] = 'A';
  return 0;
}"
153,"#include <stdlib.h>
#include <assert.h>
int main(int argc, char *argv[])
{
  char * buf;
  buf = (char *) malloc(10 * sizeof(char));
  assert (buf != NULL);
  buf[10] = 'A';
  return 0;
}"
154,"#include <stdlib.h>
#include <assert.h>
int main(int argc, char *argv[])
{
  char * buf;
  buf = (char *) malloc(10 * sizeof(char));
  assert (buf != NULL);
  buf[9] = 'A';
  return 0;
}"
155,"int main(int argc, char *argv[])
{
  static   char buf[10] = "";
  buf[4105] = 'A';
  return 0;
}"
156,"int main(int argc, char *argv[])
{
  static   char buf[10] = "";
  buf[17] = 'A';
  return 0;
}"
157,"int main(int argc, char *argv[])
{
  static   char buf[10] = "";
  buf[10] = 'A';
  return 0;
}"
158,"int main(int argc, char *argv[])
{
  static   char buf[10] = "";
  buf[9] = 'A';
  return 0;
}"
159,"int main(int argc, char *argv[])
{
  static   char buf[10];
  buf[4105] = 'A';
  return 0;
}"
160,"int main(int argc, char *argv[])
{
  static   char buf[10];
  buf[17] = 'A';
  return 0;
}"
161,"int main(int argc, char *argv[])
{
  static   char buf[10];
  buf[10] = 'A';
  return 0;
}"
162,"int main(int argc, char *argv[])
{
  static   char buf[10];
  buf[9] = 'A';
  return 0;
}"
163,"#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <assert.h>
#include <stdlib.h>
int getSharedMem()
{
  return (shmget(IPC_PRIVATE, 10, 0xffffffff));
}
void relSharedMem(int memID)
{
  struct shmid_ds temp;
  shmctl(memID, IPC_RMID, &temp);
}
int main(int argc, char *argv[])
{
  int memIdent;
  char * buf;
  memIdent = getSharedMem();
  assert(memIdent != -1);
  buf = ((char *) shmat(memIdent, NULL, 0));
  assert(((int)buf) != -1);
  buf[4105] = 'A';
  shmdt((void *)buf);
  relSharedMem(memIdent);
  return 0;
}"
164,"#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <assert.h>
#include <stdlib.h>
int getSharedMem()
{
  return (shmget(IPC_PRIVATE, 10, 0xffffffff));
}
void relSharedMem(int memID)
{
  struct shmid_ds temp;
  shmctl(memID, IPC_RMID, &temp);
}
int main(int argc, char *argv[])
{
  int memIdent;
  char * buf;
  memIdent = getSharedMem();
  assert(memIdent != -1);
  buf = ((char *) shmat(memIdent, NULL, 0));
  assert(((int)buf) != -1);
  buf[17] = 'A';
  shmdt((void *)buf);
  relSharedMem(memIdent);
  return 0;
}"
165,"#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <assert.h>
#include <stdlib.h>
int getSharedMem()
{
  return (shmget(IPC_PRIVATE, 10, 0xffffffff));
}
void relSharedMem(int memID)
{
  struct shmid_ds temp;
  shmctl(memID, IPC_RMID, &temp);
}
int main(int argc, char *argv[])
{
  int memIdent;
  char * buf;
  memIdent = getSharedMem();
  assert(memIdent != -1);
  buf = ((char *) shmat(memIdent, NULL, 0));
  assert(((int)buf) != -1);
  buf[10] = 'A';
  shmdt((void *)buf);
  relSharedMem(memIdent);
  return 0;
}"
166,"#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <assert.h>
#include <stdlib.h>
int getSharedMem()
{
  return (shmget(IPC_PRIVATE, 10, 0xffffffff));
}
void relSharedMem(int memID)
{
  struct shmid_ds temp;
  shmctl(memID, IPC_RMID, &temp);
}
int main(int argc, char *argv[])
{
  int memIdent;
  char * buf;
  memIdent = getSharedMem();
  assert(memIdent != -1);
  buf = ((char *) shmat(memIdent, NULL, 0));
  assert(((int)buf) != -1);
  buf[9] = 'A';
  shmdt((void *)buf);
  relSharedMem(memIdent);
  return 0;
}"
167,"void function1(char * buf)
{
  buf[4105] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
168,"void function1(char * buf)
{
  buf[17] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
169,"void function1(char * buf)
{
  buf[10] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
170,"void function1(char * buf)
{
  buf[9] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
171,"static   char buf[10];
int main(int argc, char *argv[])
{
  buf[4105] = 'A';
  return 0;
}"
172,"static   char buf[10];
int main(int argc, char *argv[])
{
  buf[17] = 'A';
  return 0;
}"
173,"static   char buf[10];
int main(int argc, char *argv[])
{
  buf[10] = 'A';
  return 0;
}"
174,"static   char buf[10];
int main(int argc, char *argv[])
{
  buf[9] = 'A';
  return 0;
}"
175,"static   char buf[10] = "";
int main(int argc, char *argv[])
{
  buf[4105] = 'A';
  return 0;
}"
176,"static   char buf[10] = "";
int main(int argc, char *argv[])
{
  buf[17] = 'A';
  return 0;
}"
177,"static   char buf[10] = "";
int main(int argc, char *argv[])
{
  buf[10] = 'A';
  return 0;
}"
178,"static   char buf[10] = "";
int main(int argc, char *argv[])
{
  buf[9] = 'A';
  return 0;
}"
179,"int main(int argc, char *argv[])
{
  char buf[5][10];
  buf[4][4105] = 'A';
  return 0;
}"
180,"int main(int argc, char *argv[])
{
  char buf[5][10];
  buf[4][17] = 'A';
  return 0;
}"
181,"int main(int argc, char *argv[])
{
  char buf[5][10];
  buf[4][10] = 'A';
  return 0;
}"
182,"int main(int argc, char *argv[])
{
  char buf[5][10];
  buf[4][9] = 'A';
  return 0;
}"
183,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[4105] = 'A';
  return 0;
}"
184,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[17] = 'A';
  return 0;
}"
185,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[10] = 'A';
  return 0;
}"
186,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[9] = 'A';
  return 0;
}"
187,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf1[4105] = 'A';
  return 0;
}"
188,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf1[17] = 'A';
  return 0;
}"
189,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf1[10] = 'A';
  return 0;
}"
190,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf1[9] = 'A';
  return 0;
}"
191,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf2[4105] = 'A';
  return 0;
}"
192,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf2[17] = 'A';
  return 0;
}"
193,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf2[10] = 'A';
  return 0;
}"
194,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf2[9] = 'A';
  return 0;
}"
195,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[4105] = 'A';
  return 0;
}"
196,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[17] = 'A';
  return 0;
}"
197,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[10] = 'A';
  return 0;
}"
198,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[9] = 'A';
  return 0;
}"
199,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[4105] = 'A';
  return 0;
}"
200,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[17] = 'A';
  return 0;
}"
201,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[10] = 'A';
  return 0;
}"
202,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.buf[9] = 'A';
  return 0;
}"
203,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 4105;
  s.buf[s.int_field] = 'A';
  return 0;
}"
204,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 17;
  s.buf[s.int_field] = 'A';
  return 0;
}"
205,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 10;
  s.buf[s.int_field] = 'A';
  return 0;
}"
206,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 9;
  s.buf[s.int_field] = 'A';
  return 0;
}"
207,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 4105;
  s.buf[s.int_field] = 'A';
  return 0;
}"
208,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 17;
  s.buf[s.int_field] = 'A';
  return 0;
}"
209,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 10;
  s.buf[s.int_field] = 'A';
  return 0;
}"
210,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct s;
  s.int_field = 9;
  s.buf[s.int_field] = 'A';
  return 0;
}"
211,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[4105] = 'A';
  return 0;
}"
212,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[17] = 'A';
  return 0;
}"
213,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[10] = 'A';
  return 0;
}"
214,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[9] = 'A';
  return 0;
}"
215,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[4105] = 'A';
  return 0;
}"
216,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[17] = 'A';
  return 0;
}"
217,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[10] = 'A';
  return 0;
}"
218,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union u;
  u.buf[9] = 'A';
  return 0;
}"
219,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[4105] = 'A';
  return 0;
}"
220,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[17] = 'A';
  return 0;
}"
221,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[10] = 'A';
  return 0;
}"
222,"typedef struct
{
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[9] = 'A';
  return 0;
}"
223,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf1[4105] = 'A';
  return 0;
}"
224,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf1[17] = 'A';
  return 0;
}"
225,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf1[10] = 'A';
  return 0;
}"
226,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf1[9] = 'A';
  return 0;
}"
227,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf2[4105] = 'A';
  return 0;
}"
228,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf2[17] = 'A';
  return 0;
}"
229,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf2[10] = 'A';
  return 0;
}"
230,"typedef struct
{
  char buf1[10];
  char buf2[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf2[9] = 'A';
  return 0;
}"
231,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[4105] = 'A';
  return 0;
}"
232,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[17] = 'A';
  return 0;
}"
233,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[10] = 'A';
  return 0;
}"
234,"typedef struct
{
  char buf[10];
  int int_field;
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[9] = 'A';
  return 0;
}"
235,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[4105] = 'A';
  return 0;
}"
236,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[17] = 'A';
  return 0;
}"
237,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[10] = 'A';
  return 0;
}"
238,"typedef struct
{
  int int_field;
  char buf[10];
} my_struct;
int main(int argc, char *argv[])
{
  my_struct array_buf[5];
  array_buf[4].buf[9] = 'A';
  return 0;
}"
239,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[4105] = 'A';
  return 0;
}"
240,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[17] = 'A';
  return 0;
}"
241,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[10] = 'A';
  return 0;
}"
242,"typedef union
{
  char buf[10];
  int intval;
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[9] = 'A';
  return 0;
}"
243,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[4105] = 'A';
  return 0;
}"
244,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[17] = 'A';
  return 0;
}"
245,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[10] = 'A';
  return 0;
}"
246,"typedef union
{
  int intval;
  char buf[10];
} my_union;
int main(int argc, char *argv[])
{
  my_union array_buf[5];
  array_buf[4].buf[9] = 'A';
  return 0;
}"
247,"int main(int argc, char *argv[])
{
  char buf[10];
  *(buf + 4105) = 'A';
  return 0;
}"
248,"int main(int argc, char *argv[])
{
  char buf[10];
  *(buf + 17) = 'A';
  return 0;
}"
249,"int main(int argc, char *argv[])
{
  char buf[10];
  *(buf + 10) = 'A';
  return 0;
}"
250,"int main(int argc, char *argv[])
{
  char buf[10];
  *(buf + 9) = 'A';
  return 0;
}"
251,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4105;
  buf[i] = 'A';
  return 0;
}"
252,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 17;
  buf[i] = 'A';
  return 0;
}"
253,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 10;
  buf[i] = 'A';
  return 0;
}"
254,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 9;
  buf[i] = 'A';
  return 0;
}"
255,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 1026;
  buf[(4 * i) + 1] = 'A';
  return 0;
}"
256,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4;
  buf[(4 * i) + 1] = 'A';
  return 0;
}"
257,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 2;
  buf[(4 * i) + 2] = 'A';
  return 0;
}"
258,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 2;
  buf[(4 * i) + 1] = 'A';
  return 0;
}"
259,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4106;
  buf[4105 % i] = 'A';
  return 0;
}"
260,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 18;
  buf[17 % i] = 'A';
  return 0;
}"
261,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 11;
  buf[10 % i] = 'A';
  return 0;
}"
262,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 10;
  buf[9 % i] = 'A';
  return 0;
}"
263,"int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  buf[function1(4105)] = 'A';
  return 0;
}"
264,"int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  buf[function1(17)] = 'A';
  return 0;
}"
265,"int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  buf[function1(10)] = 'A';
  return 0;
}"
266,"int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  buf[function1(9)] = 'A';
  return 0;
}"
267,"int main(int argc, char *argv[])
{
  int index_array[5];
  char buf[10];
  index_array[0] = 4105;
  buf[index_array[0]] = 'A';
  return 0;
}"
268,"int main(int argc, char *argv[])
{
  int index_array[5];
  char buf[10];
  index_array[0] = 17;
  buf[index_array[0]] = 'A';
  return 0;
}"
269,"int main(int argc, char *argv[])
{
  int index_array[5];
  char buf[10];
  index_array[0] = 10;
  buf[index_array[0]] = 'A';
  return 0;
}"
270,"int main(int argc, char *argv[])
{
  int index_array[5];
  char buf[10];
  index_array[0] = 9;
  buf[index_array[0]] = 'A';
  return 0;
}"
271,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4105;
  (buf + i)[0] = 'A';
  return 0;
}"
272,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 17;
  (buf + i)[0] = 'A';
  return 0;
}"
273,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 10;
  (buf + i)[0] = 'A';
  return 0;
}"
274,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 9;
  (buf + i)[0] = 'A';
  return 0;
}"
275,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 1026;
  (buf + (4 * i))[1] = 'A';
  return 0;
}"
276,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4;
  (buf + (4 * i))[1] = 'A';
  return 0;
}"
277,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 2;
  (buf + (4 * i))[2] = 'A';
  return 0;
}"
278,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 2;
  (buf + (4 * i))[1] = 'A';
  return 0;
}"
279,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 4106;
  (buf + (4105 % i))[0] = 'A';
  return 0;
}"
280,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 18;
  (buf + (17 % i))[0] = 'A';
  return 0;
}"
281,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 11;
  (buf + (10 % i))[0] = 'A';
  return 0;
}"
282,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = 10;
  (buf + (9 % i))[0] = 'A';
  return 0;
}"
283,"char * function1(char * arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  (function1(buf))[4105] = 'A';
  return 0;
}"
284,"char * function1(char * arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  (function1(buf))[17] = 'A';
  return 0;
}"
285,"char * function1(char * arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  (function1(buf))[10] = 'A';
  return 0;
}"
286,"char * function1(char * arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char buf[10];
  (function1(buf))[9] = 'A';
  return 0;
}"
287,"int main(int argc, char *argv[])
{
  char * addr_array[5];
  char buf[10];
  addr_array[0] = buf;
  (addr_array[0])[4105] = 'A';
  return 0;
}"
288,"int main(int argc, char *argv[])
{
  char * addr_array[5];
  char buf[10];
  addr_array[0] = buf;
  (addr_array[0])[17] = 'A';
  return 0;
}"
289,"int main(int argc, char *argv[])
{
  char * addr_array[5];
  char buf[10];
  addr_array[0] = buf;
  (addr_array[0])[10] = 'A';
  return 0;
}"
290,"int main(int argc, char *argv[])
{
  char * addr_array[5];
  char buf[10];
  addr_array[0] = buf;
  (addr_array[0])[9] = 'A';
  return 0;
}"
291,"#include <string.h>
int main(int argc, char *argv[])
{
  char buf[10];
  strcpy(buf
  return 0;
}"
292,"#include <string.h>
int main(int argc, char *argv[])
{
  char buf[10];
  strcpy(buf, "AAAAAAAAAAAAAAAAA");
  return 0;
}"
293,"#include <string.h>
int main(int argc, char *argv[])
{
  char buf[10];
  strcpy(buf, "AAAAAAAAAA");
  return 0;
}"
294,"#include <string.h>
int main(int argc, char *argv[])
{
  char buf[10];
  strcpy(buf, "AAAAAAAAA");
  return 0;
}"
295,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  strcpy(buf, src);
  return 0;
}"
296,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  strcpy(buf, src);
  return 0;
}"
297,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  strcpy(buf, src);
  return 0;
}"
298,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  strcpy(buf, src);
  return 0;
}"
299,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  strncpy(buf, src, 4106);
  return 0;
}"
300,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  strncpy(buf, src, 18);
  return 0;
}"
301,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  strncpy(buf, src, 11);
  return 0;
}"
302,"#include <string.h>
int main(int argc, char *argv[])
{
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  strncpy(buf, src, 10);
  return 0;
}"
303,"#include <string.h>
int main(int argc, char *argv[])
{
  size_t len;
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  len = 4106;
  strncpy(buf, src, len);
  return 0;
}"
304,"#include <string.h>
int main(int argc, char *argv[])
{
  size_t len;
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  len = 18;
  strncpy(buf, src, len);
  return 0;
}"
305,"#include <string.h>
int main(int argc, char *argv[])
{
  size_t len;
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  len = 11;
  strncpy(buf, src, len);
  return 0;
}"
306,"#include <string.h>
int main(int argc, char *argv[])
{
  size_t len;
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  len = 10;
  strncpy(buf, src, len);
  return 0;
}"
307,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  i = 1026;
  strncpy(buf, src, (4 * i) + 2);
  return 0;
}"
308,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  i = 4;
  strncpy(buf, src, (4 * i) + 2);
  return 0;
}"
309,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  i = 2;
  strncpy(buf, src, (4 * i) + 3);
  return 0;
}"
310,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  i = 2;
  strncpy(buf, src, (4 * i) + 2);
  return 0;
}"
311,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  i = 4107;
  strncpy(buf, src, 4106 % i);
  return 0;
}"
312,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  i = 19;
  strncpy(buf, src, 18 % i);
  return 0;
}"
313,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  i = 12;
  strncpy(buf, src, 11 % i);
  return 0;
}"
314,"#include <string.h>
int main(int argc, char *argv[])
{
  int i;
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  i = 11;
  strncpy(buf, src, 10 % i);
  return 0;
}"
315,"#include <string.h>
int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  strncpy(buf, src, function1(4106));
  return 0;
}"
316,"#include <string.h>
int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  strncpy(buf, src, function1(18));
  return 0;
}"
317,"#include <string.h>
int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  strncpy(buf, src, function1(11));
  return 0;
}"
318,"#include <string.h>
int function1(int arg1)
{
  return arg1;
}
int main(int argc, char *argv[])
{
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  strncpy(buf, src, function1(10));
  return 0;
}"
319,"#include <string.h>
int main(int argc, char *argv[])
{
  int index_array[5];
  char src[4106];
  char buf[10];
  memset(src, 'A', 4106);
  src[4106 - 1] = '\0';
  index_array[0] = 4106;
  strncpy(buf, src, index_array[0]);
  return 0;
}"
320,"#include <string.h>
int main(int argc, char *argv[])
{
  int index_array[5];
  char src[18];
  char buf[10];
  memset(src, 'A', 18);
  src[18 - 1] = '\0';
  index_array[0] = 18;
  strncpy(buf, src, index_array[0]);
  return 0;
}"
321,"#include <string.h>
int main(int argc, char *argv[])
{
  int index_array[5];
  char src[11];
  char buf[10];
  memset(src, 'A', 11);
  src[11 - 1] = '\0';
  index_array[0] = 11;
  strncpy(buf, src, index_array[0]);
  return 0;
}"
322,"#include <string.h>
int main(int argc, char *argv[])
{
  int index_array[5];
  char src[10];
  char buf[10];
  memset(src, 'A', 10);
  src[10 - 1] = '\0';
  index_array[0] = 10;
  strncpy(buf, src, index_array[0]);
  return 0;
}"
323,"int main(int argc, char *argv[])
{
  char * buf_alias;
  char buf[10];
  buf_alias = buf;
  buf_alias[4105] = 'A';
  return 0;
}"
324,"int main(int argc, char *argv[])
{
  char * buf_alias;
  char buf[10];
  buf_alias = buf;
  buf_alias[17] = 'A';
  return 0;
}"
325,"int main(int argc, char *argv[])
{
  char * buf_alias;
  char buf[10];
  buf_alias = buf;
  buf_alias[10] = 'A';
  return 0;
}"
326,"int main(int argc, char *argv[])
{
  char * buf_alias;
  char buf[10];
  buf_alias = buf;
  buf_alias[9] = 'A';
  return 0;
}"
327,"void function1(char * buf)
{
  buf[4105] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
328,"void function1(char * buf)
{
  buf[17] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
329,"void function1(char * buf)
{
  buf[10] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
330,"void function1(char * buf)
{
  buf[9] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
331,"int main(int argc, char *argv[])
{
  char * buf_alias1;
  char * buf_alias2;
  char buf[10];
  buf_alias1 = buf;
  buf_alias2 = buf_alias1;
  buf_alias2[4105] = 'A';
  return 0;
}"
332,"int main(int argc, char *argv[])
{
  char * buf_alias1;
  char * buf_alias2;
  char buf[10];
  buf_alias1 = buf;
  buf_alias2 = buf_alias1;
  buf_alias2[17] = 'A';
  return 0;
}"
333,"int main(int argc, char *argv[])
{
  char * buf_alias1;
  char * buf_alias2;
  char buf[10];
  buf_alias1 = buf;
  buf_alias2 = buf_alias1;
  buf_alias2[10] = 'A';
  return 0;
}"
334,"int main(int argc, char *argv[])
{
  char * buf_alias1;
  char * buf_alias2;
  char buf[10];
  buf_alias1 = buf;
  buf_alias2 = buf_alias1;
  buf_alias2[9] = 'A';
  return 0;
}"
335,"void function2(char * buf)
{
  buf[4105] = 'A';
}
void function1(char * buf)
{
  function2(buf);
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
336,"void function2(char * buf)
{
  buf[17] = 'A';
}
void function1(char * buf)
{
  function2(buf);
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
337,"void function2(char * buf)
{
  buf[10] = 'A';
}
void function1(char * buf)
{
  function2(buf);
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
338,"void function2(char * buf)
{
  buf[9] = 'A';
}
void function1(char * buf)
{
  function2(buf);
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf);
  return 0;
}"
339,"int main(int argc, char *argv[])
{
  int i;
  int j;
  char buf[10];
  i = 4105;
  j = i;
  buf[j] = 'A';
  return 0;
}"
340,"int main(int argc, char *argv[])
{
  int i;
  int j;
  char buf[10];
  i = 17;
  j = i;
  buf[j] = 'A';
  return 0;
}"
341,"int main(int argc, char *argv[])
{
  int i;
  int j;
  char buf[10];
  i = 10;
  j = i;
  buf[j] = 'A';
  return 0;
}"
342,"int main(int argc, char *argv[])
{
  int i;
  int j;
  char buf[10];
  i = 9;
  j = i;
  buf[j] = 'A';
  return 0;
}"
343,"int main(int argc, char *argv[])
{
  int i;
  int j;
  int k;
  char buf[10];
  i = 4105;
  j = i;
  k = j;
  buf[k] = 'A';
  return 0;
}"
344,"int main(int argc, char *argv[])
{
  int i;
  int j;
  int k;
  char buf[10];
  i = 17;
  j = i;
  k = j;
  buf[k] = 'A';
  return 0;
}"
345,"int main(int argc, char *argv[])
{
  int i;
  int j;
  int k;
  char buf[10];
  i = 10;
  j = i;
  k = j;
  buf[k] = 'A';
  return 0;
}"
346,"int main(int argc, char *argv[])
{
  int i;
  int j;
  int k;
  char buf[10];
  i = 9;
  j = i;
  k = j;
  buf[k] = 'A';
  return 0;
}"
347,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  if (flag)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
348,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  if (flag)
  {
    buf[17] = 'A';
  }
  return 0;
}"
349,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  if (flag)
  {
    buf[10] = 'A';
  }
  return 0;
}"
350,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  if (flag)
  {
    buf[9] = 'A';
  }
  return 0;
}"
351,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  switch (flag)
  {
    case 1:
      buf[4105] = 'A';
      break;
    default:
      break;
  }
  return 0;
}"
352,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  switch (flag)
  {
    case 1:
      buf[17] = 'A';
      break;
    default:
      break;
  }
  return 0;
}"
353,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  switch (flag)
  {
    case 1:
      buf[10] = 'A';
      break;
    default:
      break;
  }
  return 0;
}"
354,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  switch (flag)
  {
    case 1:
      buf[9] = 'A';
      break;
    default:
      break;
  }
  return 0;
}"
355,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  flag ?   buf[4105] = 'A' : 0;
  return 0;
}"
356,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  flag ?   buf[17] = 'A' : 0;
  return 0;
}"
357,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  flag ?   buf[10] = 'A' : 0;
  return 0;
}"
358,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  flag = 1;
  flag ?   buf[9] = 'A' : 0;
  return 0;
}"
359,"int main(int argc, char *argv[])
{
  char buf[10];
  goto label1;
  return 0;
label1:
  buf[4105] = 'A';
  return 0;
}"
360,"int main(int argc, char *argv[])
{
  char buf[10];
  goto label1;
  return 0;
label1:
  buf[17] = 'A';
  return 0;
}"
361,"int main(int argc, char *argv[])
{
  char buf[10];
  goto label1;
  return 0;
label1:
  buf[10] = 'A';
  return 0;
}"
362,"int main(int argc, char *argv[])
{
  char buf[10];
  goto label1;
  return 0;
label1:
  buf[9] = 'A';
  return 0;
}"
363,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  buf[4105] = 'A';
  longjmp(env, 1);
  return 0;
}"
364,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  buf[17] = 'A';
  longjmp(env, 1);
  return 0;
}"
365,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  buf[10] = 'A';
  longjmp(env, 1);
  return 0;
}"
366,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  buf[9] = 'A';
  longjmp(env, 1);
  return 0;
}"
367,"void function1(char * buf)
{
  buf[4105] = 'A';
}
int main(int argc, char *argv[])
{
  void (*fptr)(char *);
  char buf[10];
  fptr = function1;
  fptr(buf);
  return 0;
}"
368,"void function1(char * buf)
{
  buf[17] = 'A';
}
int main(int argc, char *argv[])
{
  void (*fptr)(char *);
  char buf[10];
  fptr = function1;
  fptr(buf);
  return 0;
}"
369,"void function1(char * buf)
{
  buf[10] = 'A';
}
int main(int argc, char *argv[])
{
  void (*fptr)(char *);
  char buf[10];
  fptr = function1;
  fptr(buf);
  return 0;
}"
370,"void function1(char * buf)
{
  buf[9] = 'A';
}
int main(int argc, char *argv[])
{
  void (*fptr)(char *);
  char buf[10];
  fptr = function1;
  fptr(buf);
  return 0;
}"
371,"void function1(char * buf, int counter)
{
  if (counter > 0)
  {
    function1(buf, counter - 1);
  }
  buf[4105] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf, 3);
  return 0;
}"
372,"void function1(char * buf, int counter)
{
  if (counter > 0)
  {
    function1(buf, counter - 1);
  }
  buf[17] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf, 3);
  return 0;
}"
373,"void function1(char * buf, int counter)
{
  if (counter > 0)
  {
    function1(buf, counter - 1);
  }
  buf[10] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf, 3);
  return 0;
}"
374,"void function1(char * buf, int counter)
{
  if (counter > 0)
  {
    function1(buf, counter - 1);
  }
  buf[9] = 'A';
}
int main(int argc, char *argv[])
{
  char buf[10];
  function1(buf, 3);
  return 0;
}"
375,"int main(int argc, char *argv[])
{
  char buf[10];
  if (sizeof buf > 4105 + 1)
  {
    return 0;
  }
  buf[4105] = 'A';
  return 0;
}"
376,"int main(int argc, char *argv[])
{
  char buf[10];
  if (sizeof buf > 17 + 1)
  {
    return 0;
  }
  buf[17] = 'A';
  return 0;
}"
377,"int main(int argc, char *argv[])
{
  char buf[10];
  if (sizeof buf > 10 + 1)
  {
    return 0;
  }
  buf[10] = 'A';
  return 0;
}"
378,"int main(int argc, char *argv[])
{
  char buf[10];
  if (sizeof buf > 9 + 1)
  {
    return 0;
  }
  buf[9] = 'A';
  return 0;
}"
379,"int main(int argc, char *argv[])
{
  char buf[10];
  switch (sizeof buf > 4105 + 1)
  {
    case 1:
      return 0;
    default:
      break;
  }
  buf[4105] = 'A';
  return 0;
}"
380,"int main(int argc, char *argv[])
{
  char buf[10];
  switch (sizeof buf > 17 + 1)
  {
    case 1:
      return 0;
    default:
      break;
  }
  buf[17] = 'A';
  return 0;
}"
381,"int main(int argc, char *argv[])
{
  char buf[10];
  switch (sizeof buf > 10 + 1)
  {
    case 1:
      return 0;
    default:
      break;
  }
  buf[10] = 'A';
  return 0;
}"
382,"int main(int argc, char *argv[])
{
  char buf[10];
  switch (sizeof buf > 9 + 1)
  {
    case 1:
      return 0;
    default:
      break;
  }
  buf[9] = 'A';
  return 0;
}"
383,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = (sizeof buf > 4105 + 1) ? 0 : 4105;
  buf[i] = 'A';
  return 0;
}"
384,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = (sizeof buf > 17 + 1) ? 0 : 17;
  buf[i] = 'A';
  return 0;
}"
385,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = (sizeof buf > 10 + 1) ? 0 : 10;
  buf[i] = 'A';
  return 0;
}"
386,"int main(int argc, char *argv[])
{
  int i;
  char buf[10];
  i = (sizeof buf > 9 + 1) ? 0 : 9;
  buf[i] = 'A';
  return 0;
}"
387,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  goto label1;
  return 0;
label1:
  flag = 1;
  if (flag)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
388,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  goto label1;
  return 0;
label1:
  flag = 1;
  if (flag)
  {
    buf[17] = 'A';
  }
  return 0;
}"
389,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  goto label1;
  return 0;
label1:
  flag = 1;
  if (flag)
  {
    buf[10] = 'A';
  }
  return 0;
}"
390,"int main(int argc, char *argv[])
{
  int flag;
  char buf[10];
  goto label1;
  return 0;
label1:
  flag = 1;
  if (flag)
  {
    buf[9] = 'A';
  }
  return 0;
}"
391,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  int flag;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  flag = 1;
  if (flag)
  {
    buf[4105] = 'A';
  }
  longjmp(env, 1);
  return 0;
}"
392,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  int flag;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  flag = 1;
  if (flag)
  {
    buf[17] = 'A';
  }
  longjmp(env, 1);
  return 0;
}"
393,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  int flag;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  flag = 1;
  if (flag)
  {
    buf[10] = 'A';
  }
  longjmp(env, 1);
  return 0;
}"
394,"#include <setjmp.h>
int main(int argc, char *argv[])
{
  jmp_buf env;
  int flag;
  char buf[10];
  if (setjmp(env) != 0)
  {
    return 0;
  }
  flag = 1;
  if (flag)
  {
    buf[9] = 'A';
  }
  longjmp(env, 1);
  return 0;
}"
395,"int function1()
{
  return 4105;
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)();
  char buf[10];
  fptr = function1;
  i = fptr();
  buf[i] = 'A';
  return 0;
}"
396,"int function1()
{
  return 17;
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)();
  char buf[10];
  fptr = function1;
  i = fptr();
  buf[i] = 'A';
  return 0;
}"
397,"int function1()
{
  return 10;
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)();
  char buf[10];
  fptr = function1;
  i = fptr();
  buf[i] = 'A';
  return 0;
}"
398,"int function1()
{
  return 9;
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)();
  char buf[10];
  fptr = function1;
  i = fptr();
  buf[i] = 'A';
  return 0;
}"
399,"int function1(int counter)
{
  if (counter > 0)
  {
    return function1(counter - 1);
  }
  else
  {
    return 4105;
  }
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)(int);
  char buf[10];
  fptr = function1;
  i = fptr(3);
  buf[i] = 'A';
  return 0;
}"
400,"int function1(int counter)
{
  if (counter > 0)
  {
    return function1(counter - 1);
  }
  else
  {
    return 17;
  }
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)(int);
  char buf[10];
  fptr = function1;
  i = fptr(3);
  buf[i] = 'A';
  return 0;
}"
401,"int function1(int counter)
{
  if (counter > 0)
  {
    return function1(counter - 1);
  }
  else
  {
    return 10;
  }
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)(int);
  char buf[10];
  fptr = function1;
  i = fptr(3);
  buf[i] = 'A';
  return 0;
}"
402,"int function1(int counter)
{
  if (counter > 0)
  {
    return function1(counter - 1);
  }
  else
  {
    return 9;
  }
}
int main(int argc, char *argv[])
{
  int i;
  int (*fptr)(int);
  char buf[10];
  fptr = function1;
  i = fptr(3);
  buf[i] = 'A';
  return 0;
}"
403,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 4105; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
404,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 17; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
405,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 10; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
406,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 9; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
407,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 4105);
  return 0;
}"
408,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 17);
  return 0;
}"
409,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 10);
  return 0;
}"
410,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 9);
  return 0;
}"
411,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(loop_counter <= 4105)
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
412,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(loop_counter <= 17)
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
413,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(loop_counter <= 10)
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
414,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(loop_counter <= 9)
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
415,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; loop_counter <= 4105; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
416,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; loop_counter <= 17; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
417,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; loop_counter <= 10; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
418,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; loop_counter <= 9; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
419,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
  }
  return 0;
}"
420,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
  }
  return 0;
}"
421,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
  }
  return 0;
}"
422,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
  }
  return 0;
}"
423,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 4105; )
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
424,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 17; )
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
425,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 10; )
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
426,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  for(loop_counter = 0; loop_counter <= 9; )
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
427,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
428,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
429,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
430,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
431,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 4105));
  return 0;
}"
432,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 17));
  return 0;
}"
433,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 10));
  return 0;
}"
434,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 9));
  return 0;
}"
435,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > 4105) break;
  }
  while(1);
  return 0;
}"
436,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > 17) break;
  }
  while(1);
  return 0;
}"
437,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > 10) break;
  }
  while(1);
  return 0;
}"
438,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > 9) break;
  }
  while(1);
  return 0;
}"
439,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    if (loop_counter >= 4105) break;
  }
  while(++loop_counter);
  return 0;
}"
440,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    if (loop_counter >= 17) break;
  }
  while(++loop_counter);
  return 0;
}"
441,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    if (loop_counter >= 10) break;
  }
  while(++loop_counter);
  return 0;
}"
442,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    if (loop_counter >= 9) break;
  }
  while(++loop_counter);
  return 0;
}"
443,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(1)
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > 4105) break;
  }
  return 0;
}"
444,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(1)
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > 17) break;
  }
  return 0;
}"
445,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(1)
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > 10) break;
  }
  return 0;
}"
446,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(1)
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > 9) break;
  }
  return 0;
}"
447,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= 4105))
  {
    buf[4105] = 'A';
  }
  return 0;
}"
448,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= 17))
  {
    buf[17] = 'A';
  }
  return 0;
}"
449,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= 10))
  {
    buf[10] = 'A';
  }
  return 0;
}"
450,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= 9))
  {
    buf[9] = 'A';
  }
  return 0;
}"
451,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[4105] = 'A';
    if (loop_counter >= 4105) break;
  }
  return 0;
}"
452,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[17] = 'A';
    if (loop_counter >= 17) break;
  }
  return 0;
}"
453,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[10] = 'A';
    if (loop_counter >= 10) break;
  }
  return 0;
}"
454,"int main(int argc, char *argv[])
{
  int loop_counter;
  char buf[10];
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[9] = 'A';
    if (loop_counter >= 9) break;
  }
  return 0;
}"
455,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 4105; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
456,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 17; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
457,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 10; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
458,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 9; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
459,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 4105);
  return 0;
}"
460,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[17] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 17);
  return 0;
}"
461,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[10] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 10);
  return 0;
}"
462,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[9] = 'A';
    loop_counter++;
  }
  while(loop_counter <= 9);
  return 0;
}"
463,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(loop_counter <= 4105)
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
464,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(loop_counter <= 17)
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
465,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(loop_counter <= 10)
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
466,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(loop_counter <= 9)
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
467,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; loop_counter <= 4105; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
468,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; loop_counter <= 17; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
469,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; loop_counter <= 10; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
470,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; loop_counter <= 9; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
471,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; ; loop_counter++)
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
  }
  return 0;
}"
472,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; ; loop_counter++)
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
  }
  return 0;
}"
473,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; ; loop_counter++)
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
  }
  return 0;
}"
474,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; ; loop_counter++)
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
  }
  return 0;
}"
475,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 4105; )
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
476,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 17; )
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
477,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 10; )
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
478,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  for(loop_counter = init_value; loop_counter <= 9; )
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
479,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; ; )
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
480,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; ; )
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
481,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; ; )
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
482,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  for( ; ; )
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
483,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[4105] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 4105));
  return 0;
}"
484,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[17] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 17));
  return 0;
}"
485,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[10] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 10));
  return 0;
}"
486,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[9] = 'A';
  }
  while((++loop_counter) && (loop_counter <= 9));
  return 0;
}"
487,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > 4105) break;
  }
  while(1);
  return 0;
}"
488,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > 17) break;
  }
  while(1);
  return 0;
}"
489,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > 10) break;
  }
  while(1);
  return 0;
}"
490,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > 9) break;
  }
  while(1);
  return 0;
}"
491,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[4105] = 'A';
    if (loop_counter >= 4105) break;
  }
  while(++loop_counter);
  return 0;
}"
492,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[17] = 'A';
    if (loop_counter >= 17) break;
  }
  while(++loop_counter);
  return 0;
}"
493,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[10] = 'A';
    if (loop_counter >= 10) break;
  }
  while(++loop_counter);
  return 0;
}"
494,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  do
  {
    buf[9] = 'A';
    if (loop_counter >= 9) break;
  }
  while(++loop_counter);
  return 0;
}"
495,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(1)
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > 4105) break;
  }
  return 0;
}"
496,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(1)
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > 17) break;
  }
  return 0;
}"
497,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(1)
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > 10) break;
  }
  return 0;
}"
498,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(1)
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > 9) break;
  }
  return 0;
}"
499,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while((++loop_counter) && (loop_counter <= 4105))
  {
    buf[4105] = 'A';
  }
  return 0;
}"
500,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while((++loop_counter) && (loop_counter <= 17))
  {
    buf[17] = 'A';
  }
  return 0;
}"
501,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while((++loop_counter) && (loop_counter <= 10))
  {
    buf[10] = 'A';
  }
  return 0;
}"
502,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while((++loop_counter) && (loop_counter <= 9))
  {
    buf[9] = 'A';
  }
  return 0;
}"
503,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(++loop_counter)
  {
    buf[4105] = 'A';
    if (loop_counter >= 4105) break;
  }
  return 0;
}"
504,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(++loop_counter)
  {
    buf[17] = 'A';
    if (loop_counter >= 17) break;
  }
  return 0;
}"
505,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(++loop_counter)
  {
    buf[10] = 'A';
    if (loop_counter >= 10) break;
  }
  return 0;
}"
506,"int main(int argc, char *argv[])
{
  int init_value;
  int loop_counter;
  char buf[10];
  init_value = 0;
  loop_counter = init_value;
  while(++loop_counter)
  {
    buf[9] = 'A';
    if (loop_counter >= 9) break;
  }
  return 0;
}"
507,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  for(loop_counter = 0; loop_counter <= test_value; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
508,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  for(loop_counter = 0; loop_counter <= test_value; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
509,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  for(loop_counter = 0; loop_counter <= test_value; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
510,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  for(loop_counter = 0; loop_counter <= test_value; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
511,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  while(loop_counter <= test_value);
  return 0;
}"
512,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter++;
  }
  while(loop_counter <= test_value);
  return 0;
}"
513,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter++;
  }
  while(loop_counter <= test_value);
  return 0;
}"
514,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter++;
  }
  while(loop_counter <= test_value);
  return 0;
}"
515,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  while(loop_counter <= test_value)
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
516,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  while(loop_counter <= test_value)
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
517,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  while(loop_counter <= test_value)
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
518,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  while(loop_counter <= test_value)
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
519,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  for( ; loop_counter <= test_value; loop_counter++)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
520,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  for( ; loop_counter <= test_value; loop_counter++)
  {
    buf[17] = 'A';
  }
  return 0;
}"
521,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  for( ; loop_counter <= test_value; loop_counter++)
  {
    buf[10] = 'A';
  }
  return 0;
}"
522,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  for( ; loop_counter <= test_value; loop_counter++)
  {
    buf[9] = 'A';
  }
  return 0;
}"
523,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > test_value) break;
    buf[4105] = 'A';
  }
  return 0;
}"
524,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > test_value) break;
    buf[17] = 'A';
  }
  return 0;
}"
525,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > test_value) break;
    buf[10] = 'A';
  }
  return 0;
}"
526,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  for(loop_counter = 0; ; loop_counter++)
  {
    if (loop_counter > test_value) break;
    buf[9] = 'A';
  }
  return 0;
}"
527,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  for(loop_counter = 0; loop_counter <= test_value; )
  {
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
528,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  for(loop_counter = 0; loop_counter <= test_value; )
  {
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
529,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  for(loop_counter = 0; loop_counter <= test_value; )
  {
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
530,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  for(loop_counter = 0; loop_counter <= test_value; )
  {
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
531,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > test_value) break;
    buf[4105] = 'A';
    loop_counter++;
  }
  return 0;
}"
532,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > test_value) break;
    buf[17] = 'A';
    loop_counter++;
  }
  return 0;
}"
533,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > test_value) break;
    buf[10] = 'A';
    loop_counter++;
  }
  return 0;
}"
534,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > test_value) break;
    buf[9] = 'A';
    loop_counter++;
  }
  return 0;
}"
535,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
  }
  while((++loop_counter) && (loop_counter <= test_value));
  return 0;
}"
536,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
  }
  while((++loop_counter) && (loop_counter <= test_value));
  return 0;
}"
537,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
  }
  while((++loop_counter) && (loop_counter <= test_value));
  return 0;
}"
538,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
  }
  while((++loop_counter) && (loop_counter <= test_value));
  return 0;
}"
539,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  while(1);
  return 0;
}"
540,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  while(1);
  return 0;
}"
541,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  while(1);
  return 0;
}"
542,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  while(1);
  return 0;
}"
543,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    if (loop_counter >= test_value) break;
  }
  while(++loop_counter);
  return 0;
}"
544,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    if (loop_counter >= test_value) break;
  }
  while(++loop_counter);
  return 0;
}"
545,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    if (loop_counter >= test_value) break;
  }
  while(++loop_counter);
  return 0;
}"
546,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    if (loop_counter >= test_value) break;
  }
  while(++loop_counter);
  return 0;
}"
547,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  while(1)
  {
    buf[4105] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  return 0;
}"
548,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  while(1)
  {
    buf[17] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  return 0;
}"
549,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  while(1)
  {
    buf[10] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  return 0;
}"
550,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  while(1)
  {
    buf[9] = 'A';
    loop_counter++;
    if (loop_counter > test_value) break;
  }
  return 0;
}"
551,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= test_value))
  {
    buf[4105] = 'A';
  }
  return 0;
}"
552,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= test_value))
  {
    buf[17] = 'A';
  }
  return 0;
}"
553,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= test_value))
  {
    buf[10] = 'A';
  }
  return 0;
}"
554,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  while((++loop_counter) && (loop_counter <= test_value))
  {
    buf[9] = 'A';
  }
  return 0;
}"
555,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 4105;
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[4105] = 'A';
    if (loop_counter >= test_value) break;
  }
  return 0;
}"
556,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 17;
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[17] = 'A';
    if (loop_counter >= test_value) break;
  }
  return 0;
}"
557,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 10;
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[10] = 'A';
    if (loop_counter >= test_value) break;
  }
  return 0;
}"
558,"int main(int argc, char *argv[])
{
  int test_value;
  int loop_counter;
  char buf[10];
  test_value = 9;
  loop_counter = 0;
  while(++loop_counter)
  {
    buf[9] = 'A';
    if (loop_counter >= test_value) break;
  }
  return 0;
}"
559,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  for(loop_counter = 0; loop_counter <= 4105; loop_counter += inc_value)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
560,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  for(loop_counter = 0; loop_counter <= 17; loop_counter += inc_value)
  {
    buf[17] = 'A';
  }
  return 0;
}"
561,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  for(loop_counter = 0; loop_counter <= 10; loop_counter += inc_value)
  {
    buf[10] = 'A';
  }
  return 0;
}"
562,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  for(loop_counter = 0; loop_counter <= 9; loop_counter += inc_value)
  {
    buf[9] = 'A';
  }
  return 0;
}"
563,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter += inc_value;
  }
  while(loop_counter <= 4105);
  return 0;
}"
564,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter += inc_value;
  }
  while(loop_counter <= 17);
  return 0;
}"
565,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter += inc_value;
  }
  while(loop_counter <= 10);
  return 0;
}"
566,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter += inc_value;
  }
  while(loop_counter <= 9);
  return 0;
}"
567,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  while(loop_counter <= 4105)
  {
    buf[4105] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
568,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  while(loop_counter <= 17)
  {
    buf[17] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
569,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  while(loop_counter <= 10)
  {
    buf[10] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
570,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  while(loop_counter <= 9)
  {
    buf[9] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
571,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  for( ; loop_counter <= 4105; loop_counter += inc_value)
  {
    buf[4105] = 'A';
  }
  return 0;
}"
572,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  for( ; loop_counter <= 17; loop_counter += inc_value)
  {
    buf[17] = 'A';
  }
  return 0;
}"
573,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  for( ; loop_counter <= 10; loop_counter += inc_value)
  {
    buf[10] = 'A';
  }
  return 0;
}"
574,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  for( ; loop_counter <= 9; loop_counter += inc_value)
  {
    buf[9] = 'A';
  }
  return 0;
}"
575,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  for(loop_counter = 0; ; loop_counter += inc_value)
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
  }
  return 0;
}"
576,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  for(loop_counter = 0; ; loop_counter += inc_value)
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
  }
  return 0;
}"
577,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  for(loop_counter = 0; ; loop_counter += inc_value)
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
  }
  return 0;
}"
578,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  for(loop_counter = 0; ; loop_counter += inc_value)
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
  }
  return 0;
}"
579,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  for(loop_counter = 0; loop_counter <= 4105; )
  {
    buf[4105] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
580,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  for(loop_counter = 0; loop_counter <= 17; )
  {
    buf[17] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
581,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  for(loop_counter = 0; loop_counter <= 10; )
  {
    buf[10] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
582,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  for(loop_counter = 0; loop_counter <= 9; )
  {
    buf[9] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
583,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 4105) break;
    buf[4105] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
584,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 17) break;
    buf[17] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
585,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 10) break;
    buf[10] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
586,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  for( ; ; )
  {
    if (loop_counter > 9) break;
    buf[9] = 'A';
    loop_counter += inc_value;
  }
  return 0;
}"
587,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
  }
  while((loop_counter += inc_value) && (loop_counter <= 4105));
  return 0;
}"
588,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
  }
  while((loop_counter += inc_value) && (loop_counter <= 17));
  return 0;
}"
589,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
  }
  while((loop_counter += inc_value) && (loop_counter <= 10));
  return 0;
}"
590,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
  }
  while((loop_counter += inc_value) && (loop_counter <= 9));
  return 0;
}"
591,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 4105) break;
  }
  while(1);
  return 0;
}"
592,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 17) break;
  }
  while(1);
  return 0;
}"
593,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 10) break;
  }
  while(1);
  return 0;
}"
594,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 9) break;
  }
  while(1);
  return 0;
}"
595,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  do
  {
    buf[4105] = 'A';
    if (loop_counter >= 4105) break;
  }
  while(loop_counter += inc_value);
  return 0;
}"
596,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  do
  {
    buf[17] = 'A';
    if (loop_counter >= 17) break;
  }
  while(loop_counter += inc_value);
  return 0;
}"
597,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  do
  {
    buf[10] = 'A';
    if (loop_counter >= 10) break;
  }
  while(loop_counter += inc_value);
  return 0;
}"
598,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 9 - (9 - 1);
  loop_counter = 0;
  do
  {
    buf[9] = 'A';
    if (loop_counter >= 9) break;
  }
  while(loop_counter += inc_value);
  return 0;
}"
599,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 4105 - (4105 - 1);
  loop_counter = 0;
  while(1)
  {
    buf[4105] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 4105) break;
  }
  return 0;
}"
600,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 17 - (17 - 1);
  loop_counter = 0;
  while(1)
  {
    buf[17] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 17) break;
  }
  return 0;
}"
601,"int main(int argc, char *argv[])
{
  int inc_value;
  int loop_counter;
  char buf[10];
  inc_value = 10 - (10 - 1);
  loop_counter = 0;
  while(1)
  {
    buf[10] = 'A';
    loop_counter += inc_value;
    if (loop_counter > 10) break;
  }
  return 0;
}"
